name: Test Build  

on:
  push:
    branches:
      - 'test'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1


      # Runs a single command using the runners shell
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '14.18.3'

      # Runs a set of commands using the runners shell
      - name: Install Dependencies
        run: npm install

      - name: Build Release
        run: npm run pkg

      - name: List Files
        run: ls -alh dist/

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Prepare Docker Tags
        id: docker_tags
        run: |
              echo "::set-output name=tags::h55205l/ffandown:test"

      - name: Build And Push Docker image
        uses: docker/build-push-action@v3
        with:
            context: ./
            file: Dockerfile
            push: true
            platforms: linux/amd64
            tags: ${{ steps.docker_tags.outputs.tags }}

      - name: Prepare Arm Docker Tags
        id: docker_arm_tags
        run: |
              echo "::set-output name=tags::h55205l/ffandown:arm64-test"

      - name: Build And Push Arm64 Docker image
        uses: docker/build-push-action@v3
        with:
            context: ./
            file: Dockerfile-linux-arm
            push: true
            platforms: linux/arm64
            tags: ${{ steps.docker_arm_tags.outputs.tags }}